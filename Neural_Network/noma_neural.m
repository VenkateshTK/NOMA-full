function [Y,Xf,Af] = noma_neural(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 20-Jul-2020 20:03:50.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx5 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx4 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [1.0003539650124;1.03818148892233;1.23561451760618;1.90162906456248;3.80843654713891];
x1_step1.gain = [0.578082994713242;0.536112488441912;0.539904154043108;0.64627530197559;0.0719116199931184];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.34030928903948398645;0.35456356676435013542;-3.9461929888830105106;2.6777418064412130683;-0.47139093558474343126;-2.9239926555260162822;0.69373057774360091798;0.27044947924907519754;2.775982075983270736;0.3253465956578823759;0.47643460579783969422;3.4178649936634362128;-0.021068934800110315775;-6.916054839952838762;0.19134871995383184728;0.66984973732881492037;-2.6078301958475487154;-1.5816992679465413651;1.2578074124655542754;0.20781235627338501271];
IW1_1 = [-2.0061966441089280622 1.9741672016737989992 -0.1947885489531683556 0.10835701459102169142 1.0899472936785821187;-1.4569676240707059023 2.1914073223029242321 -0.97635223319942909814 2.4172611616858312722 0.68224937246343864139;6.398932546062397364 -5.5979574214927358966 -5.4011454345242198016 3.6935200944590960148 -5.8584022566492448547;-3.8777402561912945878 3.6846512126760200267 2.4208025660754892705 -1.5467037058218655599 4.5768758967664844306;0.35858450982887662972 -0.9885450158370715501 4.6342011348928195957 -2.0012345665043045351 -1.2726568345866520193;4.2971058507660728765 -4.020183643948641361 -3.0738455601361032166 2.1477553871911378991 -4.5215917586134635187;-2.9045006966838129436 2.5285329933434499416 -0.24260619157275159496 0.9510542715910845768 2.585432017832710816;-2.0007493502937623298 1.9720132643125982685 -0.62916791471457489404 0.31596699430440566836 1.0191397172346587929;-3.8503334787394161154 3.6282747806014810088 2.2631205718892792866 -1.3384858226239289003 5.0947792619497924704;-2.6777362988056472304 2.7621707975834759452 0.50755802377731740194 0.048864463071329543309 1.922305744238004932;-2.2745657608697191776 2.2605915824613269649 0.30952038219587801882 -0.002868196948863543233 1.4840837052957616127;-5.2511507174681550936 4.720805480059127035 4.2066981523046349523 -2.9743418847810394468 5.045327670879268922;-0.00051182324125220940783 0.00022021295781874211076 -0.00026683299313910214829 2.2654254799789496673e-05 0.14656203730934766472;4.1631519931186051764 -3.9566354846727063155 4.2933863421780849023 5.2104521284535660897 -3.0179573352057316171;-0.036203769285402719047 -0.17058981776938636488 1.0499977364680579406 -0.079918651462042883393 0.70061616803769544148;-4.7321879108526045954 5.2170724794741216712 0.64085581720009354711 -0.31578176888882808493 0.0096474548487864020263;-1.1223404169305679634 -0.0116559313940073489 0.027875975283040029667 0.0063102165790362178474 0.014634089612635682934;3.9900196394600779826 -4.4336704213146092002 0.03332754952520586289 0.30615585611775308905 1.1238514242423274236;-3.9652937135256260959 4.378387472358560295 0.10827780790425096946 -0.25093030623838141757 -0.77805537607919739163;2.6025349464685438861 -3.2312063413417018154 1.1158642578480060248 -1.9292000059997413963 -0.31256992004572675681];

% Layer 2
b2 = [-0.52473818314648534855;-0.72315554431587081297;-0.44000965680083997666;0.57236189262936587596];
LW2_1 = [-5.4202027053706212101 0.13388086541587260192 -2.9581082592920644458 -12.103658741845521263 0.043301032669877476122 -12.576621221309327581 -0.38016708954374117679 2.5320379169931777064 4.7143980183601730261 -1.633036671541799878 5.692701998314200651 -8.5739447226871838836 6.342771843612954541 0.024478929524073517188 -0.09562532186439400006 -0.56478537604792067306 -0.32188797788624440299 1.6471249727011834096 2.3489189802317507194 0.13908402317507229107;2.9151977302116267587 -0.069274830209673010639 1.563390812036896671 6.4029234666693435329 -0.039456270164614080931 6.6503433277233385823 0.19835840568498913639 -1.3944834811685165032 -2.4935337176933405345 0.8470399847987712949 -2.9834355006954313971 4.5290981973405690653 2.7049230225899689728 -0.016322223097861764118 0.10118085382995999078 0.29031278870255267099 -0.45073709982742721225 -0.79361074163533473769 -1.1594205119324434428 -0.073546236428846389899;3.0870947168285698403 -0.078883502450915021775 1.7328442194946800381 6.9356602010827410609 -0.0072309655037428068047 7.2244066770562751501 0.22724777293813980261 -1.4160407300049384638 -2.6943678080611932479 0.9561323129146723776 -3.3194419330504780774 4.9671524949515166725 3.2929558551192092963 -0.009899608324597150219 0.0074755396818554356239 0.33333113837572847515 -0.20931598388772229558 -0.99223197934703866174 -1.4010779482510378191 -0.081718147298372276199;0.011602965952303614244 -0.0016417147795670615756 -0.01525457739095019416 -0.0086563391334745481281 -7.3698836478825331371e-05 -0.0014491330943664864316 0.0022702617431421953306 -0.0093601559042696524243 0.010039290053985858511 0.0026096298529177256245 -0.0091523880637319060538 -0.017017201108386805636 6.7813003042953328148 -0.00051545513124270100989 -0.00039180615539612258756 -0.0014955028637951314589 0.46917879249556987409 0.0096691038243854037643 0.010416068939812178282 -0.001076032351086445276];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.245552245043539;0.271893769126385;0.276352550189692;0.142441469856932];
y1_step1.xoffset = [1e-14;0.277745681301064;0.716785551529931;2.2689682503498];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
