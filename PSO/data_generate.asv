particle(i).position =  particle(i).position + particle(i).velocity;


                particle(i).position = max(particle(i).position, varmin);
                particle(i).position = min(particle(i).position, varmax);

                particle(i).cost = costfunction(particle(i).position,h);

                if particle(i).cost > particle(i).best.cost
                    particle(i).best.position = particle(i).position;
                    particle(i).best.cost = particle(i).cost;
                    % Update Global Best
                    if particle(i).best.cost > globalbest.cost
                        globalbest = particle(i).best;
                    end            
                end
            end
            bestcost(it) = globalbest.cost;
            %w = w*wdamp;
        end
        disp([ num2str(a) '- Iteration' num2str(it) ': best cost = ' num2str(bestcost(it)) ' power =' num2str(sum(globalbest.position))]);
        s = s+1;


        vmax = vmax + 0.5*(power_tot(j)-sum(globalbest.position));  

        dataset(s).h1 = h(1);
        dataset(s).h2 = h(2);
        dataset(s).h3 = h(3);
        dataset(s).h4 = h(4);
        
        dataset(s).power1 = globalbest.position(1)/100;
        dataset(s).power2 = globalbest.position(2)/100;
        dataset(s).power3 = globalbest.position(3)/100;
        dataset(s).power4 = globalbest.position(4)/100;
        
        dataset(s).total = sum(globalbest.position)/100;
        dataset(s).check = costfunction(globalbest.position,h);
        dataset(s).channel = valuescheck(globalbest.position,h);

        total_power(s) = sum(globalbest.position);

    end
end


figure;
plot(total_power,'LineWidth',2);
xlabel('Iteration');
ylabel('best cost');
grid on;